export function fetchJS(t,e,r,s){let n={resourceUrl:t,resourceMethod:e,resourceContent_type:r,resourceResponse_type:s},o=n.resourceUrl=t,i=n.resourceMethod=e,c=n.resourceContent_type=r,a=n.resourceResponse_type=s;if(""==o||""==i||""==c||""==a){let t={message:"data cannot be blank"};return JSON.stringify(t)}if("GET"!=i){let t={message:"method must be get"};return JSON.stringify(t)}if(!["json","text"].includes(a)){let t={message:"response type is not define"};return JSON.stringify(t)}if(!["application/json","application/xml","application/javascript","text/html"].includes(c)){let t={message:"content type is not supported"};return JSON.stringify(t)}return"text"==a?async function(){let t=`https://corsproxy.io/?${o}`,e={method:i,"Content-Type":c};try{let r=await fetch(t,e),s=await r.text();if(200==r.status)return s;{let t={message:"An error has occur"};return JSON.stringify(t)}}catch(t){}}():"json"==a?async function(){let t=`https://corsproxy.io/?${o}`,e={method:i,"Content-Type":c};try{let r=await fetch(t,e),s=await r.json();if(200==r.status)return s;{let t={message:"An error has occur"};return JSON.stringify(t)}}catch(t){}}():void 0}export function proxyS(){return"https://corsproxy.io/?"}